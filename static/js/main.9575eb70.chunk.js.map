{"version":3,"sources":["redux/contactsSlice.js","redux/filterSlice.js","App.jsx","redux/store.js","index.js"],"names":["contactsSlice","createSlice","name","initialState","reducers","addContact","state","action","takenIds","map","x","id","newId","includes","push","_objectSpread","payload","delContact","filter","Number","actions","setFilter","type","filterReducer","arguments","length","undefined","App","contacts","useSelector","dispatch","useDispatch","React","createElement","className","onSubmit","e","preventDefault","target","elements","inputname","value","number","inputnumber","reset","required","placeholder","pattern","delID","onInput","toLowerCase","key","rootReducer","combineReducers","contactsReducer","persistConfig","storage","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","createRoot","document","getElementById","render","StrictMode","Provider","PersistGate","loading"],"mappings":"6OAEA,MAAMA,EAAgBC,YAAY,CAChCC,KAAM,WACNC,aAAc,GACdC,SAAU,CACRC,WAAYA,CAACC,EAAOC,KAClB,MAAMC,EAAWF,EAAMG,IAAIC,GAAKA,EAAEC,IAClC,IAAIC,EAAQ,EACZ,KAAOJ,EAASK,SAASD,IAAQA,IACjCN,EAAMQ,KAAIC,wBAAA,GAAMR,EAAOS,SAAO,IAAEL,GAAIC,MAEtCK,WAAYA,CAACX,EAAOC,IACXD,EAAMY,OAAOR,GAAKA,EAAEC,KAAOQ,OAAOZ,EAAOS,cAKzCX,WAAEA,EAAUY,WAAEA,GAAejB,EAAcoB,QACzCpB,QAAqB,QCjBpC,MAEaqB,EAAaL,IAAO,CAC/BM,KAAM,mBACNN,YAYaO,MATO,WAAkC,IAAjCjB,EAAKkB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAPP,GAOwBjB,EAAMiB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQnB,EAAOe,MACb,IAAK,mBACH,OAAOf,EAAOS,QAChB,QACE,OAAOV,ICmDEqB,MA3Df,WACE,MAAMC,EAAWC,YAAYvB,GAASA,EAAMsB,UACtCV,EAASW,YAAYvB,GAASA,EAAMY,QACpCY,EAAWC,cAqBjB,OACEC,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,UAAI,YAEJD,IAAAC,cAAA,QAAME,SAvBEC,IACVA,EAAEC,iBACFP,EAASzB,EAAW,CAClBH,KAAMkC,EAAEE,OAAOC,SAASC,UAAUC,MAClCC,OAAQN,EAAEE,OAAOC,SAASI,YAAYF,SAExCL,EAAEE,OAAOM,UAkBLZ,IAAAC,cAAA,SAAOY,UAAQ,EAAC3C,KAAK,YAAY4C,YAAY,SAC7Cd,IAAAC,cAAA,SAAOY,UAAQ,EAAC3C,KAAK,cAAc4C,YAAY,SAASC,QAAQ,iBAChEf,IAAAC,cAAA,UAAQX,KAAK,UAAS,gBAGxBU,IAAAC,cAAA,QAAME,SApBEC,IACVA,EAAEC,iBACFP,EAASb,EAAWmB,EAAEE,OAAOC,SAASS,MAAMP,QAC5CL,EAAEE,OAAOM,UAkBLZ,IAAAC,cAAA,SAAOY,UAAQ,EAAC3C,KAAK,QAAQoB,KAAK,SAASwB,YAAY,OACvDd,IAAAC,cAAA,UAAQX,KAAK,UAAS,mBAGxBU,IAAAC,cAAA,SACEX,KAAK,OACLwB,YAAY,SACZG,QAtBOb,IACXN,EAAST,EAAUe,EAAEE,OAAOG,SAsBxBA,MAAOvB,IAGTc,IAAAC,cAAA,UACGL,EACEV,OAAOR,GAAKA,EAAER,KAAKgD,cAAcrC,SAASK,EAAOgC,gBACjDzC,IAAIC,GACHsB,IAAAC,cAAA,MAAIkB,IAAKzC,EAAEC,IACTqB,IAAAC,cAAA,QAAMC,UAAU,MAAK,IAAExB,EAAEC,IAAU,IAAED,EAAER,KAAK,IAAC8B,IAAAC,cAAA,YAAOvB,EAAEgC,4CCjDpE,MAAMU,EAAcC,YAAgB,CAClCzB,SAAU0B,EACVpC,OAAQK,IAGJgC,EAAgB,CACpBJ,IAAK,OACLK,aAGIC,EAAmBC,YAAeH,EAAeH,GAE1CO,EAAQC,YAAe,CAClCC,QAASJ,IAEEK,EAAYC,YAAaJ,eCdtCK,qBAAWC,SAASC,eAAe,SAASC,OAC1CnC,IAAAC,cAACmC,aAAU,KACTpC,IAAAC,cAACoC,IAAQ,CAACV,MAAOA,GACd3B,IAAAC,cAACqC,IAAW,CAACC,QAAS,KAAMT,UAAWA,GACxC9B,IAAAC,cAACN,EAAG","file":"static/js/main.9575eb70.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: [],\r\n  reducers: {\r\n    addContact: (state, action) => {\r\n      const takenIds = state.map(x => x.id);\r\n      let newId = 1;\r\n      while (takenIds.includes(newId)) newId++;\r\n      state.push({ ...action.payload, id: newId });\r\n    },\r\n    delContact: (state, action) => {\r\n      return state.filter(x => x.id !== Number(action.payload));\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addContact, delContact } = contactsSlice.actions;\r\nexport default contactsSlice.reducer;\r\n","\r\n\r\nconst initialState = '';\r\n\r\nexport const setFilter = (payload) => ({\r\n  type: 'filter/setFilter',\r\n  payload,\r\n});\r\n\r\nconst filterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'filter/setFilter':\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filterReducer;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact, delContact } from './redux/contactsSlice';\r\nimport { setFilter } from './redux/filterSlice';\r\n\r\nfunction App() {\r\n  const contacts = useSelector(state => state.contacts);\r\n  const filter = useSelector(state => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const add = e => {\r\n    e.preventDefault();\r\n    dispatch(addContact({\r\n      name: e.target.elements.inputname.value,\r\n      number: e.target.elements.inputnumber.value\r\n    }));\r\n    e.target.reset();\r\n  };\r\n\r\n  const del = e => {\r\n    e.preventDefault();\r\n    dispatch(delContact(e.target.elements.delID.value));\r\n    e.target.reset();\r\n  };\r\n\r\n  const filt = e => {\r\n    dispatch(setFilter(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Contacts</h1>\r\n\r\n      <form onSubmit={add}>\r\n        <input required name=\"inputname\" placeholder=\"Name\" />\r\n        <input required name=\"inputnumber\" placeholder=\"Number\" pattern=\"^[^A-Za-z]*$\" />\r\n        <button type=\"submit\">Add Contact</button>\r\n      </form>\r\n\r\n      <form onSubmit={del}>\r\n        <input required name=\"delID\" type=\"number\" placeholder=\"ID\" />\r\n        <button type=\"submit\">Delete Contact</button>\r\n      </form>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Filter\"\r\n        onInput={filt}\r\n        value={filter}\r\n      />\r\n\r\n      <ul>\r\n        {contacts\r\n          .filter(x => x.name.toLowerCase().includes(filter.toLowerCase()))\r\n          .map(x => (\r\n            <li key={x.id}>\r\n              <span className=\"id\">#{x.id}</span> {x.name} <code>{x.number}</code>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contactsSlice';\r\nimport filterReducer from './filterSlice';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { combineReducers } from 'redux';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer\r\n});\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer\r\n});\r\nexport const persistor = persistStore(store);","import React from 'react'\r\nimport { StrictMode } from 'react'\r\nimport { createRoot } from 'react-dom/client'\r\nimport './index.css'\r\nimport App from './App.jsx'\r\nimport { store,persistor  } from './redux/store'\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\ncreateRoot(document.getElementById('root')).render(\r\n  <StrictMode>\r\n    <Provider store={store}>\r\n       <PersistGate loading={null} persistor={persistor}>\r\n      <App/>\r\n      </PersistGate>\r\n    </Provider>\r\n  </StrictMode>\r\n)"],"sourceRoot":""}