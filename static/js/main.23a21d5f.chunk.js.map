{"version":3,"sources":["redux/authSlice.js","redux/selectors.js","components/RegisterPage.jsx","components/LoginPage.jsx","redux/contactsSlice.js","redux/filterSlice.js","components/ContactsPage.jsx","components/UserMenu.jsx","components/Navigation.jsx","components/PrivateRoute.jsx","App.jsx","redux/store.js","index.js"],"names":["setAuthHeader","token","axios","defaults","headers","common","Authorization","concat","clearAuthHeader","registerUser","createAsyncThunk","async","credentials","thunkAPI","response","post","data","error","rejectWithValue","message","loginUser","logoutUser","_","refreshUser","persistedToken","getState","auth","get","authSlice","createSlice","name","initialState","user","isLoggedIn","isLoading","reducers","clearAuthError","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","selectContacts","contacts","items","selectIsLoading","selectError","selectFilter","filter","selectAuthLoading","selectAuthError","selectIsLoggedIn","selectUserEmail","_state$auth$user","email","selectFilteredContacts","createSelector","contact","toLowerCase","includes","RegisterPage","dispatch","useDispatch","useSelector","setName","useState","setEmail","password","setPassword","React","createElement","onSubmit","e","preventDefault","type","value","onChange","target","required","disabled","className","LoginPage","fetchContacts","addContact","deleteContact","id","delete","contactsSlice","push","filterSlice","setFilter","ContactForm","_ref","onAddContact","number","setNumber","pattern","title","Filter","_ref2","onSetFilter","ContactListItem","_ref3","onDeleteContact","onClick","ContactList","_ref4","map","key","ContactsPage","filteredContacts","useEffect","some","existingContact","alert","length","UserMenu","userEmail","handleLogout","Navigation","NavLink","to","PrivateRoute","children","Navigate","App","isRefreshing","Router","Routes","Route","path","element","Link","authPersistConfig","storage","whitelist","store","configureStore","reducer","contactsReducer","filterReducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistStore","baseURL","createRoot","document","getElementById","render","StrictMode","Provider"],"mappings":"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","file":"static/js/main.23a21d5f.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst setAuthHeader = token => {\r\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n};\r\n\r\nconst clearAuthHeader = () => {\r\n  delete axios.defaults.headers.common.Authorization;\r\n};\r\n\r\n//регистрация\r\nexport const registerUser = createAsyncThunk(\r\n  'auth/register',\r\n  async (credentials, thunkAPI) => {\r\n    try {\r\n      const response = await axios.post('/users/signup', credentials);\r\n      setAuthHeader(response.data.token);\r\n      return response.data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data.message || error.message);\r\n    }\r\n  }\r\n);\r\n\r\n//вход\r\nexport const loginUser = createAsyncThunk(\r\n  'auth/login',\r\n  async (credentials, thunkAPI) => {\r\n    try {\r\n      const response = await axios.post('/users/login', credentials);\r\n      setAuthHeader(response.data.token);\r\n      return response.data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data.message || error.message);\r\n    }\r\n  }\r\n);\r\n\r\n//выход\r\nexport const logoutUser = createAsyncThunk(\r\n  'auth/logout',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      await axios.post('/users/logout');\r\n      clearAuthHeader();\r\n    } catch (error) {\r\n      clearAuthHeader();\r\n      return thunkAPI.rejectWithValue(error.response.data.message || error.message);\r\n    }\r\n  }\r\n);\r\n\r\n//операция для получения текущего пользователя\r\nexport const refreshUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token; \r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue('No token to refresh');\r\n    }\r\n\r\n    try {\r\n      setAuthHeader(persistedToken);\r\n      const response = await axios.get('/users/current');\r\n      return response.data;\r\n    } catch (error) {\r\n      clearAuthHeader(); // Если токен недействителен то удаляем его\r\n      return thunkAPI.rejectWithValue(error.response.data.message || error.message);\r\n    }\r\n  }\r\n);\r\n\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState: {\r\n    user: null,\r\n    token: null,\r\n    isLoggedIn: false,\r\n    isLoading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    clearAuthError(state) {\r\n      state.error = null;\r\n    }\r\n  },\r\n  extraReducers: builder => {\r\n    builder\r\n      // Регистрация\r\n      .addCase(registerUser.pending, state => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(registerUser.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.isLoggedIn = true;\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n        state.isLoggedIn = false;\r\n        state.token = null;\r\n      })\r\n      // Вход\r\n      .addCase(loginUser.pending, state => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.isLoggedIn = true;\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n        state.isLoggedIn = false;\r\n        state.token = null;\r\n      })\r\n      // Выход\r\n      .addCase(logoutUser.pending, state => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(logoutUser.fulfilled, state => {\r\n        state.isLoading = false;\r\n        state.user = null;\r\n        state.token = null;\r\n        state.isLoggedIn = false;\r\n      })\r\n      .addCase(logoutUser.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n        state.user = null;\r\n        state.token = null;\r\n        state.isLoggedIn = false;\r\n      })\r\n      // Обновление пользователя \r\n      .addCase(refreshUser.pending, state => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(refreshUser.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.user = action.payload;\r\n        state.isLoggedIn = true;\r\n      })\r\n      .addCase(refreshUser.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n        state.user = null;\r\n        state.token = null; \r\n        state.isLoggedIn = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearAuthError } = authSlice.actions;\r\nexport default authSlice.reducer;","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const selectContacts = state => state.contacts.items;\r\nexport const selectIsLoading = state => state.contacts.isLoading;\r\nexport const selectError = state => state.contacts.error;\r\nexport const selectFilter = state => state.filter;\r\n\r\n\r\nexport const selectAuthLoading = state => state.auth.isLoading;\r\nexport const selectAuthError = state => state.auth.error;\r\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\r\nexport const selectUser = state => state.auth.user;\r\nexport const selectUserEmail = state => state.auth.user?.email; \r\n\r\nexport const selectFilteredContacts = createSelector(\r\n  [selectContacts, selectFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n);","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registerUser } from '../redux/authSlice';\r\nimport { selectAuthError, selectAuthLoading } from '../redux/selectors';\r\n\r\nconst RegisterPage = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectAuthLoading);\r\n  const error = useSelector(selectAuthError);\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(registerUser({ name, email, password }));\r\n    // setName('');\r\n    // setEmail('');\r\n    // setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Зареєструватися</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Ім'я:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Email:\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Пароль:\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? 'Реєстрація...' : 'Зареєструватися'}\r\n        </button>\r\n      </form>\r\n      {error && <p className=\"error-message\">Error: {error}</p>} \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser } from '../redux/authSlice';\r\nimport { selectAuthError, selectAuthLoading } from '../redux/selectors';\r\n\r\nconst LoginPage = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectAuthLoading);\r\n  const error = useSelector(selectAuthError);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(loginUser({ email, password }));\r\n    // setEmail('');\r\n    // setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Вхід</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Email:\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Пароль:\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? 'Logging in...' : 'Login'}\r\n        </button>\r\n      </form>\r\n      {/* {error && <p className=\"error-message\">Error: {error}</p>} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n\r\n// axios.defaults.baseURL = 'https://connections-api.goit.global/'; \r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchAll',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const response = await axios.get('/contacts');\r\n      return response.data;\r\n    } catch (e) {\r\n      return thunkAPI.rejectWithValue(e.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async (contact, thunkAPI) => {\r\n    try {\r\n      const response = await axios.post('/contacts', contact);\r\n      return response.data;\r\n    } catch (e) {\r\n      return thunkAPI.rejectWithValue(e.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      await axios.delete(`/contacts/${id}`);\r\n      return id;\r\n    } catch (e) {\r\n      return thunkAPI.rejectWithValue(e.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: {\r\n    items: [],\r\n    isLoading: false,\r\n    error: null\r\n  },\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(fetchContacts.pending, state => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchContacts.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.items = action.payload;\r\n      })\r\n      .addCase(fetchContacts.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      .addCase(addContact.pending, state => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(addContact.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.items.push(action.payload);\r\n      })\r\n      .addCase(addContact.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      .addCase(deleteContact.pending, state => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(deleteContact.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.items = state.items.filter(contact => contact.id !== action.payload);\r\n      })\r\n      .addCase(deleteContact.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default contactsSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst filterSlice = createSlice({\r\n  name: 'filter',\r\n  initialState: '',\r\n  reducers: {\r\n    setFilter(state, action) {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setFilter } = filterSlice.actions;\r\nexport default filterSlice.reducer;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchContacts, addContact, deleteContact } from '../redux/contactsSlice';\r\nimport { setFilter } from '../redux/filterSlice';\r\nimport {\r\n  selectContacts,\r\n  selectIsLoading,\r\n  selectError,\r\n  selectFilter,\r\n  selectFilteredContacts,\r\n} from '../redux/selectors';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ContactForm = ({ onAddContact, isLoading }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onAddContact({ name, number });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}> \r\n      <label>\r\n        Ім'я:\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Ім'я може містити лише літери, апостроф, тире та пробіли.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Номер:\r\n        <input\r\n          type=\"number\" \r\n          value={number}\r\n          onChange={e => setNumber(e.target.value)}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефону має складатися з цифр, може містити пробіли, дефіси, дужки та починатися з +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" disabled={isLoading}>\r\n        {isLoading ? 'Додавання контакту...' : 'Додати контакт'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\n\r\nconst Filter = ({ filter, onSetFilter }) => {\r\n  return (\r\n    <div className=\"filter-container\">\r\n      <label>\r\n        Пошук контактів за іменем:\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={e => onSetFilter(e.target.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onSetFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst ContactListItem = ({ contact, onDeleteContact }) => {\r\n  return (\r\n    <li className=\"contact-list-item\"> \r\n      <span>\r\n        {contact.name}: {contact.number}\r\n      </span>\r\n      <button type=\"button\" onClick={() => onDeleteContact(contact.id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className=\"contact-list\"> \r\n      {contacts.map(contact => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          contact={contact}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nconst ContactsPage = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(selectContacts); \r\n  const isLoading = useSelector(selectIsLoading);\r\n  const error = useSelector(selectError);\r\n  const filter = useSelector(selectFilter);\r\n  const filteredContacts = useSelector(selectFilteredContacts); \r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const handleAddContact = contact => {\r\n    const isDuplicate = contacts.some(\r\n      existingContact =>\r\n        existingContact.name.toLowerCase() === contact.name.toLowerCase()\r\n    );\r\n\r\n    if (isDuplicate) {\r\n      alert(`${contact.name} вже є в контактах.`);\r\n      return;\r\n    }\r\n    dispatch(addContact(contact));\r\n  };\r\n\r\n  const handleDeleteContact = id => {\r\n    dispatch(deleteContact(id));\r\n  };\r\n\r\n  const handleSetFilter = value => {\r\n    dispatch(setFilter(value));\r\n  };\r\n\r\n  return (\r\n    <div> \r\n      <h1>Телефонна книга</h1>\r\n      <ContactForm onAddContact={handleAddContact} isLoading={isLoading} />\r\n\r\n      <h2>Контакти</h2>\r\n      <Filter filter={filter} onSetFilter={handleSetFilter} />\r\n\r\n      {isLoading && !error && <p className=\"loading-message\">Завантаження контактів...</p>}\r\n      {error && <p className=\"error-message\">Error: {error}</p>}\r\n      {!isLoading && !error && contacts.length === 0 && <p>Контактів не знайдено.</p>}\r\n      \r\n      {/* Отображаем список только если есть отфильтрованные контакты */}\r\n      {!isLoading && !error && filteredContacts.length > 0 && (\r\n        <ContactList\r\n          contacts={filteredContacts}\r\n          onDeleteContact={handleDeleteContact}\r\n        />\r\n      )}\r\n      {!isLoading && !error && contacts.length > 0 && filteredContacts.length === 0 && filter && (\r\n        <p>Немає контактів, що відповідають вашому фільтру.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsPage;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutUser } from '../redux/authSlice'; \r\nimport { selectUserEmail } from '../redux/selectors'; \r\n\r\n\r\nconst UserMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const userEmail = useSelector(selectUserEmail); \r\n\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser());\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-menu\"> \r\n      <p>{userEmail}</p>\r\n      <button type=\"button\" onClick={handleLogout}>Вийти</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMenu;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport UserMenu from './UserMenu'; \r\nimport { selectIsLoggedIn } from '../redux/selectors'; \r\n\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(selectIsLoggedIn); \r\n\r\n  return (\r\n    <nav className=\"main-nav\"> \r\n      <NavLink to=\"/\">Home</NavLink>\r\n      {!isLoggedIn && <NavLink to=\"/register\">Зареєструватися</NavLink>}\r\n      {!isLoggedIn && <NavLink to=\"/login\">Вхід</NavLink>}\r\n      {isLoggedIn && <NavLink to=\"/contacts\">Контакти</NavLink>}\r\n      {isLoggedIn && <UserMenu />}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn); \r\n\r\n  return isLoggedIn ? children : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom'; \r\nimport './App.css';\r\nimport RegisterPage from './components/RegisterPage'; \r\nimport LoginPage from './components/LoginPage';\r\nimport ContactsPage from './components/ContactsPage';\r\nimport Navigation from './components/Navigation'; \r\nimport PrivateRoute from './components/PrivateRoute'; \r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { refreshUser } from './redux/authSlice';\r\nimport { selectIsLoggedIn, selectAuthLoading } from './redux/selectors';\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useSelector(selectIsLoggedIn);\r\n  const isRefreshing = useSelector(selectAuthLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(refreshUser());\r\n  }, [dispatch]);\r\n\r\n  if (isRefreshing) {\r\n    return <p className=\"loading-message\">Оновлення користувача...</p>;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Navigation />\r\n      \r\n      <div className=\"container\">\r\n        <Routes>\r\n          <Route path=\"/register\" element={<RegisterPage />} />\r\n          <Route path=\"/login\" element={<LoginPage />} />\r\n          <Route path=\"/contacts\" element={\r\n            <PrivateRoute>\r\n              <ContactsPage />\r\n            </PrivateRoute>\r\n          } />\r\n          <Route path=\"/\" element={\r\n            isLoggedIn ? (\r\n              <p>Ласкаво просимо! Перейти до <Link to=\"/contacts\">контактів</Link></p> \r\n            ) : (\r\n              <p>Ласкаво просимо! Перейдіть до <Link to=\"/register\">реєстрації</Link> або <Link to=\"/login\">увійдіть</Link>.</p> \r\n            )\r\n          } />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist'; \r\nimport storage from 'redux-persist/lib/storage'; \r\n\r\nimport contactsReducer from './contactsSlice';\r\nimport filterReducer from './filterSlice';\r\nimport authReducer from './authSlice';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth', \r\n  storage,\r\n  whitelist: ['token'], \r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    filter: filterReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer), \r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store); ","import React from 'react';\r\nimport { StrictMode } from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport { store, persistor } from './redux/store'; \r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react'; \r\nimport axios from 'axios'; \r\n\r\naxios.defaults.baseURL = 'https://connections-api.goit.global/'; \r\n\r\n\r\ncreateRoot(document.getElementById('root')).render(\r\n  <StrictMode>\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n  </StrictMode>\r\n)"],"sourceRoot":""}