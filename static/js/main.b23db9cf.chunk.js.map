{"version":3,"sources":["redux/contactsSlice.js","redux/filterSlice.js","App.jsx","redux/store.js","index.js"],"names":["contactsSlice","createSlice","name","initialState","reducers","addContact","state","action","takenIds","map","x","id","newId","includes","push","_objectSpread","payload","delContact","filter","Number","actions","setFilter","type","filterReducer","arguments","length","undefined","App","contacts","useSelector","cont","fil","dispatch","useDispatch","React","createElement","className","onSubmit","e","preventDefault","target","elements","inputname","value","number","inputnumber","required","placeholder","pattern","delID","onInput","key","store","configureStore","reducer","contactsReducer","createRoot","document","getElementById","render","StrictMode","Provider"],"mappings":"6OAEA,MAAMA,EAAgBC,YAAY,CAChCC,KAAM,WACNC,aAAc,GACdC,SAAU,CACRC,WAAYA,CAACC,EAAOC,KAClB,MAAMC,EAAWF,EAAMG,IAAIC,GAAKA,EAAEC,IAClC,IAAIC,EAAQ,EACZ,KAAOJ,EAASK,SAASD,IAAQA,IACjCN,EAAMQ,KAAIC,wBAAA,GAAMR,EAAOS,SAAO,IAAEL,GAAIC,MAEtCK,WAAYA,CAACX,EAAOC,IACXD,EAAMY,OAAOR,GAAKA,EAAEC,KAAOQ,OAAOZ,EAAOS,cAKzCX,WAAEA,EAAUY,WAAEA,GAAejB,EAAcoB,QACzCpB,QAAqB,QCjBpC,MAEaqB,EAAaL,IAAO,CAC/BM,KAAM,mBACNN,YAYaO,MATO,WAAkC,IAAjCjB,EAAKkB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAPP,GAOwBjB,EAAMiB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQnB,EAAOe,MACb,IAAK,mBACH,OAAOf,EAAOS,QAChB,QACE,OAAOV,ICkEEqB,MA1Ef,WACE,MAAMC,EAAWC,YAAYvB,GAASA,EAAMwB,MACtCZ,EAASW,YAAYvB,GAASA,EAAMyB,KACpCC,EAAWC,cAmBjB,OACAC,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,UAAI,YAEJD,IAAAC,cAAA,QAAME,SArBIC,IACVA,EAAEC,iBACFP,EAAS3B,EAAW,CAClBH,KAAMoC,EAAEE,OAAOC,SAASC,UAAUC,MAClCC,OAAQN,EAAEE,OAAOC,SAASI,YAAYF,WAkBtCT,IAAAC,cAAA,SACEW,UAAQ,EACRxB,KAAK,OACLpB,KAAK,YACLS,GAAG,aACHoC,YAAY,SAEdb,IAAAC,cAAA,SACEW,UAAQ,EACRxB,KAAK,OACLpB,KAAK,cACLS,GAAG,eACHoC,YAAY,sBACZC,QAAQ,iBAEVd,IAAAC,cAAA,UAAQb,KAAK,UAAS,gBAGxBY,IAAAC,cAAA,QAAME,SAhCIC,IACVA,EAAEC,iBACFP,EAASf,EAAWqB,EAAEE,OAAOC,SAASQ,MAAMN,UA+B1CT,IAAAC,cAAA,SAAOW,UAAQ,EAAC5C,KAAK,QAAQoB,KAAK,SAASX,GAAG,SAASoC,YAAY,OACnEb,IAAAC,cAAA,UAAQb,KAAK,UAAS,mBAGxBY,IAAAC,cAAA,SACEb,KAAK,OACLX,GAAG,SACHT,KAAK,SACL6C,YAAY,SACZG,QArCSZ,IACXN,EAASX,EAAUiB,EAAEE,OAAOG,WAuC5BT,IAAAC,cAAA,UACGP,EACEV,OAAQR,GAAMA,EAAER,KAAKW,SAASK,IAC9BT,IAAKC,GACJwB,IAAAC,cAAA,MAAIgB,IAAKzC,EAAEC,IACTuB,IAAAC,cAAA,QAAMC,UAAU,MAAK,IAAE1B,EAAEC,IACxBD,EAAER,KACHgC,IAAAC,cAAA,YAAOzB,EAAEkC,aCnEd,MAAMQ,EAAQC,YAAe,CAClCC,QAAS,CACPxB,KAAMyB,EACNxB,IAAKR,KCCTiC,qBAAWC,SAASC,eAAe,SAASC,OAC1CzB,IAAAC,cAACyB,aAAU,KACT1B,IAAAC,cAAC0B,IAAQ,CAACT,MAAOA,GACflB,IAAAC,cAACR,EAAG","file":"static/js/main.b23db9cf.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: [],\r\n  reducers: {\r\n    addContact: (state, action) => {\r\n      const takenIds = state.map(x => x.id);\r\n      let newId = 1;\r\n      while (takenIds.includes(newId)) newId++;\r\n      state.push({ ...action.payload, id: newId });\r\n    },\r\n    delContact: (state, action) => {\r\n      return state.filter(x => x.id !== Number(action.payload));\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addContact, delContact } = contactsSlice.actions;\r\nexport default contactsSlice.reducer;\r\n","\r\n\r\nconst initialState = '';\r\n\r\nexport const setFilter = (payload) => ({\r\n  type: 'filter/setFilter',\r\n  payload,\r\n});\r\n\r\nconst filterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'filter/setFilter':\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filterReducer;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact, delContact } from './redux/contactsSlice';\r\nimport { setFilter } from './redux/filterSlice';\r\n\r\nfunction App() {\r\n  const contacts = useSelector(state => state.cont);\r\n  const filter = useSelector(state => state.fil);\r\n  const dispatch = useDispatch();\r\n\r\n  const add = e => {\r\n    e.preventDefault();\r\n    dispatch(addContact({\r\n      name: e.target.elements.inputname.value,\r\n      number: e.target.elements.inputnumber.value\r\n    }));\r\n  };\r\n\r\n  const del = e => {\r\n    e.preventDefault();\r\n    dispatch(delContact(e.target.elements.delID.value));\r\n  };\r\n\r\n  const filt = e => {\r\n    dispatch(setFilter(e.target.value));\r\n  };\r\n\r\n  return (\r\n  <div className=\"container\">\r\n    <h1>Contacts</h1>\r\n\r\n    <form onSubmit={add}>\r\n      <input\r\n        required\r\n        type=\"text\"\r\n        name=\"inputname\"\r\n        id=\"input-name\"\r\n        placeholder=\"Name\"\r\n      />\r\n      <input\r\n        required\r\n        type=\"text\"\r\n        name=\"inputnumber\"\r\n        id=\"input-number\"\r\n        placeholder=\"Number (no letters)\"\r\n        pattern=\"^[^A-Za-z]*$\"\r\n      />\r\n      <button type=\"submit\">Add Contact</button>\r\n    </form>\r\n\r\n    <form onSubmit={del}>\r\n      <input required name=\"delID\" type=\"number\" id=\"del-id\" placeholder=\"ID\" />\r\n      <button type=\"submit\">Delete Contact</button>\r\n    </form>\r\n\r\n    <input\r\n      type=\"text\"\r\n      id=\"filter\"\r\n      name=\"filter\"\r\n      placeholder=\"Filter\"\r\n      onInput={filt}\r\n    />\r\n\r\n    <ul>\r\n      {contacts\r\n        .filter((x) => x.name.includes(filter))\r\n        .map((x) => (\r\n          <li key={x.id}>\r\n            <span className=\"id\">#{x.id}</span>\r\n            {x.name}\r\n            <code>{x.number}</code>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contactsSlice';\r\nimport filterReducer from './filterSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    cont: contactsReducer,\r\n    fil: filterReducer\r\n  }\r\n});\r\n","import React from 'react'\r\nimport { StrictMode } from 'react'\r\nimport { createRoot } from 'react-dom/client'\r\nimport './index.css'\r\nimport App from './App.jsx'\r\nimport { store } from './redux/store'\r\nimport { Provider } from 'react-redux'\r\n\r\ncreateRoot(document.getElementById('root')).render(\r\n  <StrictMode>\r\n    <Provider store={store}>\r\n      <App/>\r\n    </Provider>\r\n  </StrictMode>\r\n)"],"sourceRoot":""}