{"version":3,"sources":["redux/contactsSlice.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App.jsx","redux/store.js","index.js"],"names":["contactsSlice","createSlice","name","initialState","contacts","filter","reducers","addContact","state","action","push","payload","deleteContact","c","id","setFilter","actions","ContactForm","setName","useState","phone","setPhone","dispatch","useDispatch","useSelector","React","createElement","onSubmit","e","preventDefault","find","toLowerCase","alert","concat","Date","now","toString","type","placeholder","value","onChange","target","required","ContactList","normalizedFilter","visibleContacts","contact","includes","map","_ref","key","onClick","Filter","App","persistConfig","storage","whitelist","persistedReducer","persistReducer","contactsReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter","basename","Provider","PersistGate","loading"],"mappings":"uLAEA,MAKMA,EAAgBC,YAAY,CAChCC,KAAM,WACNC,aAPmB,CACnBC,SAAU,GACVC,OAAQ,IAMRC,SAAU,CACRC,WAAWC,EAAOC,GAChBD,EAAMJ,SAASM,KAAKD,EAAOE,UAE7BC,cAAcJ,EAAOC,GACnBD,EAAMJ,SAAWI,EAAMJ,SAASC,OAAOQ,GAAKA,EAAEC,KAAOL,EAAOE,UAE9DI,UAAUP,EAAOC,GACfD,EAAMH,OAASI,EAAOE,aAKfJ,WAAEA,EAAUK,cAAEA,EAAaG,UAAEA,GAAcf,EAAcgB,QACvDhB,QAAqB,QCyBrBiB,MA5CKA,KAClB,MAAOf,EAAMgB,GAAWC,mBAAS,KAC1BC,EAAOC,GAAYF,mBAAS,IAC7BG,EAAWC,cACXnB,EAAWoB,YAAYhB,GAASA,EAAMJ,UAe5C,OACEqB,IAAAC,cAAA,QAAMC,SAdaC,IACnBA,EAAEC,iBAEEzB,EAAS0B,KAAKjB,GAAKA,EAAEX,KAAK6B,gBAAkB7B,EAAK6B,eACnDC,MAAK,GAAAC,OAAI/B,EAAI,8FAIfoB,EAASf,EAAW,CAAEO,GAAIoB,KAAKC,MAAMC,WAAYlC,OAAMkB,WACvDF,EAAQ,IACRG,EAAS,OAKPI,IAAAC,cAAA,SACEW,KAAK,OACLC,YAAY,sBACZC,MAAOrC,EACPsC,SAAUZ,GAAKV,EAAQU,EAAEa,OAAOF,OAChCG,UAAQ,IAEVjB,IAAAC,cAAA,SACEW,KAAK,MACLC,YAAY,6CACZC,MAAOnB,EACPoB,SAAUZ,GAAKP,EAASO,EAAEa,OAAOF,OACjCG,UAAQ,IAEVjB,IAAAC,cAAA,UAAQW,KAAK,UAAS,qFCdbM,MAtBKA,KAClB,MAAMrB,EAAWC,eACXnB,SAAEA,EAAQC,OAAEA,GAAWmB,YAAYhB,GAASA,GAE5CoC,EAAmBvC,EAAO0B,cAE1Bc,EAAkBzC,EAASC,OAAOyC,GACtCA,EAAQ5C,KAAK6B,cAAcgB,SAASH,IAGtC,OACEnB,IAAAC,cAAA,UACGmB,EAAgBG,IAAIC,IAAA,IAACnC,GAAEA,EAAEZ,KAAEA,EAAIkB,MAAEA,GAAO6B,EAAA,OACvCxB,IAAAC,cAAA,MAAIwB,IAAKpC,GACNZ,EAAK,KAAGkB,EAAO,IAChBK,IAAAC,cAAA,UAAQyB,QAASA,IAAM7B,EAASV,EAAcE,KAAM,yDCD/CsC,MAdAA,KACb,MAAM/C,EAASmB,YAAYhB,GAASA,EAAMH,QACpCiB,EAAWC,cAEjB,OACEE,IAAAC,cAAA,SACEW,KAAK,OACLC,YAAY,wFACZC,MAAOlC,EACPmC,SAAUZ,GAAKN,EAASP,EAAUa,EAAEa,OAAOF,WCClCc,MATHA,IACV5B,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,yFACJD,IAAAC,cAACT,EAAW,MACZQ,IAAAC,cAAC0B,EAAM,MACP3B,IAAAC,cAACiB,EAAW,sBCMhB,MAAMW,EAAgB,CACpBJ,IAAK,WACLK,iBACAC,UAAW,CAAC,aAGRC,EAAmBC,YAAeJ,EAAeK,GAE1CC,EAAQC,YAAe,CAClCC,QAASL,EACTM,WAAYC,GACVA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,UAKrDC,EAAYC,YAAad,uBCzBzBe,IAASC,WAAWC,SAASC,eAAe,SAEpDC,OACHtD,IAAAC,cAACD,IAAMuD,WAAU,KACfvD,IAAAC,cAACuD,IAAa,CAACC,SAAS,gBACtBzD,IAAAC,cAACyD,IAAQ,CAACvB,MAAOA,GACfnC,IAAAC,cAAC0D,IAAW,CAACC,QAAS,KAAMZ,UAAWA,GACrChD,IAAAC,cAAC2B,EAAG","file":"static/js/main.05042665.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  filter: '',\r\n};\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState,\r\n  reducers: {\r\n    addContact(state, action) {\r\n      state.contacts.push(action.payload);\r\n    },\r\n    deleteContact(state, action) {\r\n      state.contacts = state.contacts.filter(c => c.id !== action.payload);\r\n    },\r\n    setFilter(state, action) {\r\n      state.filter = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addContact, deleteContact, setFilter } = contactsSlice.actions;\r\nexport default contactsSlice.reducer;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact } from '../../redux/contactsSlice';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => state.contacts);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (contacts.find(c => c.name.toLowerCase() === name.toLowerCase())) {\r\n      alert(`${name} вже є у контактах`);\r\n      return;\r\n    }\r\n\r\n    dispatch(addContact({ id: Date.now().toString(), name, phone }));\r\n    setName('');\r\n    setPhone('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Ім'я\"\r\n        value={name}\r\n        onChange={e => setName(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"tel\"\r\n        placeholder=\"Телефон\"\r\n        value={phone}\r\n        onChange={e => setPhone(e.target.value)}\r\n        required\r\n      />\r\n      <button type=\"submit\">Додати контакт</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  \r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contactsSlice';\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const { contacts, filter } = useSelector(state => state);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const visibleContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n\r\n  return (\r\n    <ul>\r\n      {visibleContacts.map(({ id, name, phone }) => (\r\n        <li key={id}>\r\n          {name}: {phone}{' '}\r\n          <button onClick={() => dispatch(deleteContact(id))}>Видалити</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setFilter } from '../../redux/contactsSlice';\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(state => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Пошук контактів\"\r\n      value={filter}\r\n      onChange={e => dispatch(setFilter(e.target.value))}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\n\r\nconst App = () => (\r\n  <div>\r\n    <h1>Книга контактів</h1>\r\n    <ContactForm />\r\n    <Filter />\r\n    <ContactList />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contactsSlice';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  whitelist: ['contacts'], \r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, contactsReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './components/App';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename=\"/HW-29-react\">\r\n      <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <App />\r\n        </PersistGate>\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}